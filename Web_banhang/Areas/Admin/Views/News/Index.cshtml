@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<Web_banhang.Models.NewsVM>

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Danh sách tin tức";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

}

@section leftnavbar{
    <li class="nav-item d-none d-sm-inline-block">
        <a href="#" class="nav-link">@ViewData["Title"]</a>
    </li>
}
@section pageHeader{
    <li class="breadcrumb-item active">@ViewData["Title"]</li>
}

<section class="content">
    <div class="container-fluid">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">@ViewData["Title"]</h3> <div class="row">
                    </div>
                    <div class="float-right card-tools">
                        <a asp-action="Create" class="btn btn-primary">Thêm mới</a>
                        <a href="#" id="DeleteAll" class="btn btn-danger">Xoá</a>
                    </div>
                </div>
                <div class="card-body table-responsive p-0">
                    <div class="row">
                        <div class="col-md-6">
                        </div>
                        <div class="col-md-5">
                            <form asp-action="Index" asp-controller="News" method="post">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <div class="input-group mb-3">
                                    <p>
                                        <div class="input-group-prepend">
                                          
                                        </div>
                                        <input name="searchstring" value="@ViewBag.searchstring" type="text" class="form-control">
                                        <input type="submit" value="Tìm kiếm" class="btn btn-success" />
                                    </p>
                                </div>
                            </form>
                        </div>
                        <div class="col-md-1"></div>
                    </div>
                    <table class="table table-striped text-wrap">
                        <thead>
                            <tr>
                                <th> <input type="checkbox" id="SelectAll" /></th>
                                <th>
                                    @*@Html.DisplayNameFor(model => model.Id)*@
                                    ID
                                </th>
                                <th class="">
                                    @*@Html.DisplayNameFor(model => model.Title)*@
                                    Tiêu đề
                                </th>
                                <th class="container col-2">
                                    @*@Html.DisplayNameFor(model => model.CreatedDate)*@
                                    Ngày tạo
                                </th>
                                <th>
                                    @*@Html.DisplayNameFor(model => model.Image)*@
                                    Hình ảnh
                                </th>
                                <th class="container col-1 text-center">
                                    @*@Html.DisplayNameFor(model => model.IsActive)*@
                                    Hiển thị
                                </th>
                                <th class="container col-2"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.Any())
                            {
                                @foreach (var item in Model)
                                {
                                    var strCheck = item.IsActive ? "<i class='fa fa-check text-success'></i>" : "<i class='fas fa-times text-danger'> </i>";
                                    <tr id="row_@item.Id">

                                        <td>
                                            <input type="checkbox" class="cbkItem" value="@item.Id" />
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Id)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Title)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.CreatedDate)
                                        </td>
                                        <td>
                                            @*@Html.DisplayFor(modelItem => item.FileImage)*@
                                            <picture>
                                                <img width="100" src='@Url.Content(item.Image)' alt="Hình ảnh">
                                            </picture>
                                        </td>
                                        <td class="text-center">
                                            <a href="#" data-id="@item.Id" class="btnActive"> @Html.Raw(strCheck)</a>
                                        </td>
                                        <td>
                                            <a class="btn btn-info" asp-action="Edit" asp-route-id="@item.Id">Sửa</a>
                                            @*<a asp-action="Details" asp-route-id="@item.Id">Details</a> |*@
                                            <a class="btn btn-danger btnDelete" data-id="@item.Id">Xoá</a>
                                        </td>
                                    </tr>

                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="4">Không có bản ghi nào!</td>
                                </tr>

                            }

                        </tbody>
                    </table>
                    <!-- Thêm mã phân trang -->
                    <div class="row">
                        @* <div class="col-sm-12 col-md-5">
                        <div style="text-align: center">
                        Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount

                        </div>
                        <div class="dataTables_info" id="example2_info" role="status" aria-live="polite">Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount</div>
                        </div>*@
                        <div class="col-6"></div>
                        <div class="col-5" style="text-align:right;">
                            @Html.PagedListPager(Model, page => Url.Action("Index", new { page , searchstring = ViewBag.searchstring}))
                        </div>
                        <div class="col-1"></div>

                    </div>
                    <!-- Kết thúc -->
                </div>
            </div>
        </div>
    </div>

</section>

@Html.AntiForgeryToken()
@section script{
    <script>
        $(document).ready(function () {
            $('body').on('click', '.btnDelete', function () {

                var id = $(this).data("id");
                var token = $('input[name="__RequestVerificationToken"]').val();
                var conf = confirm("Bạn có muốn xoá bản ghi này không?");
                if (conf == true) {
                    $.ajax({
                        url: "/Admin/News/Delete/",
                        type: "post",
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader("XFRS-TOKEN", $('input:hidden[name="_RequestVerificationToken"]').val());
                        },
                        data: {
                            __RequestVerificationToken: token,
                            id: id
                        },
                        success: function (rs) {
                            if (rs.success) {
                                $('#row_' + id).remove();
                            }
                            else {
                                alert("Không thành công!");
                            }
                        },
                        error: function (xhr) {
                            alert(" err Không thành công!");
                        }

                    })
                }
            });

            $('body').on('click', '.btnActive', function (e) {

                e.preventDefault();
                var btn = $(this);
                var id = btn.data("id");
                var id = $(this).data("id");

                var token = $('input[name="__RequestVerificationToken"]').val();
                $.ajax({
                    url: "/Admin/News/IsActive/",
                    type: "post",
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XFRS-TOKEN", $('input:hidden[name="_RequestVerificationToken"]').val());
                    },
                    data: {
                        __RequestVerificationToken: token,
                        id: id
                    },

                    success: function (rs) {
                        //console.log(rs);
                        if (rs.success) {
                            if (rs.isActive == true) {
                                btn.html("<i class='fa fa-check text-success'/>");
                                //$("#btnActive").html("<i id='btnActive' class='fa fa-check text-success'></i>");
                            }
                            else if (rs.isActive == false) {
                                btn.html("<i class='fas fa-times text-danger'> </i>");
                                //$("#btnActive").html("<i id='btnActive' class='fa fa-check text-danger'></i>");
                            }
                        }
                    }
                });
            });

            $('body').on('change', '#SelectAll', function (e) {
                e.preventDefault();
                var checked = $('#SelectAll').is(':checked');
                //console.log(checked);
                //var checkStatus = this.Checked;
                var checkbox = $(this).parents('.card-body').find('tr td input:checkbox');

                checkbox.each(function () {

                    //this.checked = checkStatus;

                    //console.log(this.checked)
                    var ids = $(this).val();

                    //console.log(ids);
                    //if (this.checked) {
                    //    console.log(ids);
                    //}
                    if (!checked) {
                        //console.log("unchecked");

                        $(".cbkItem").prop('checked', false);

                        // check item is selected or not
                        //

                    }
                    else {
                        //console.log("checked");

                        $(".cbkItem").prop('checked', true);
                        //console.log(ids);
                    }
                });

            });

            $('body').on('click', '#DeleteAll', function (e) {
                e.preventDefault();
                var checkbox = $(this).parents('.card').find('tr td input:checkbox');
                //console.log("DeleteAll");
                var strList = "";
                checkbox.each(function () {
                    //console.log(ids);
                    if (this.checked) {
                        var ids = $(this).val();
                        strList += ids + ",";
                        //console.log(ids);
                    }
                });
                //console.log(strList);
                //console.log(strList.slice(0, -1));
                strList = strList.substring(0, strList.length - 1);
                //console.log(strList);
                if (strList.length > 0) {
                    var conf = confirm('Bạn có muốn xóa các bản ghi này hay không?');
                    if (conf === true) {
                        var token = $('input[name="__RequestVerificationToken"]').val();
                        $.ajax({
                            url: "/Admin/News/DeleteAll/",
                            type: "post",
                            beforeSend: function (xhr) {
                                xhr.setRequestHeader("XFRS-TOKEN", $('input:hidden[name="_RequestVerificationToken"]').val());
                            },
                            data: {
                                __RequestVerificationToken: token,
                                ids: strList
                            },
                            success: function (rs) {
                                //console.log(rs);
                                if (rs.success) {
                                    checkbox.each(function () {
                                        //console.log(ids);
                                        if (this.checked) {
                                            var ids = $(this).val();
                                            $('#row_' + ids).remove();
                                        }
                                    });
                                }
                                else {
                                    alert("Không thành công!");
                                }
                            },
                            error: function (xhr) {
                                alert("Không thành công!");
                            }
                        });
                    }
                }
            });
            //$(function () {
            //    //If check_all checked then check all table rows
            //    $("#check_all").on("click", function () {
            //        if ($("input:checkbox").prop("checked")) {
            //            $("input:checkbox[name='row-check']").prop("checked", true);
            //        } else {
            //            $("input:checkbox[name='row-check']").prop("checked", false);
            //        }
            //    });

            //    // Check each table row checkbox
            //    $("input:checkbox[name='row-check']").on("change", function () {
            //        var total_check_boxes = $("input:checkbox[name='row-check']").length;
            //        var total_checked_boxes = $("input:checkbox[name='row-check']:checked").length;

            //        // If all checked manually then check check_all checkbox
            //        if (total_check_boxes === total_checked_boxes) {
            //            $("#check_all").prop("checked", true);
            //        }
            //        else {
            //            $("#check_all").prop("checked", false);
            //        }
            //    });
            //});

        });

    </script>
}